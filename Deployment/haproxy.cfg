#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   https://www.haproxy.org/download/1.8/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    # log         127.0.0.1 local2
    log         /dev/log local0

    # chroot      /var/lib/haproxy
    # pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

    # utilize system-wide crypto-policies
    # ssl-default-bind-ciphers PROFILE=SYSTEM
    # ssl-default-server-ciphers PROFILE=SYSTEM

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
frontend main
    bind greenstock_haproxy_1:80
    bind greenstock_haproxy_1:443 ssl crt /usr/local/etc/haproxy/full.pem
    acl https ssl_fc
#    http-request redirect scheme https unless { ssl_fc }
    http-response add-header Access-Control-Allow-Origin "*"

    acl generalStock   path_beg    -i  /api/generalStock
    acl login     path_beg    -i  /api/login
    acl register   path_beg    -i  /api/register

    use_backend backend_generalStock      if generalStock
    use_backend backend_login             if login
    use_backend backend_register          if register

    default_backend             greenstock_webserver_1

#---------------------------------------------------------------------
# static backend for serving up JSONs
#---------------------------------------------------------------------
#backend backend_generalStock
#    server generalStock generalStock:8080
#    mode http
#    http-request set-path %[path,regsub(^/api/calendar/,/)]

#backend backend_login
#    server login login:8080
#    mode http
#    http-request set-path %[path,regsub(^/api/grades/,/)]

#backend backend_register
#    server register register:8080
#    mode http
#    http-request set-path %[path,regsub(^/api/schedule/,/)]

#---------------------------------------------------------------------
# Ability to choose between Apache and Nginx
#---------------------------------------------------------------------
backend app
    balance     roundrobin
    # server  app1 nginx-container:80 check                   # Nginx
    server  app2 greenstock_webserver_1:80 check                   # Apache
    http-response set-header Access-Control-Allow-Origin "*"
